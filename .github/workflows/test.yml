name: Test

on:
  push:
    branches-ignore:
      - master
      - staging
      - production

jobs:
  test:
    # services:
    #   mysql:
    #     image: mysql:5.7
    #     env:
    #       MYSQL_DATABASE: database
    #       MYSQL_USER: user
    #       MYSQL_PASSWORD: password
    #     ports:
    #       - 3306
    #     options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    runs-on: ubuntu-latest

    # env:
    #   DATABASE_HOST: localhost
    #   DATABASE_USERNAME: root
    #   DATABASE_PASSWORD: root
    #   DATABASE_NAME: vpa-backend_test

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      matrix:
        node-version: [16.14]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn

      - name: restore env file
        run: |
          echo "${{ secrets.GPG_PASSPHRASE }}" | sudo gpg --batch --passphrase-fd 0 --output ".env" --decrypt "env/.env.gpg"
          echo "${{ secrets.GPG_PASSPHRASE }}" | sudo gpg --batch --passphrase-fd 0 --output ".env.test" --decrypt "env/.env.ci-test.gpg"

      - name: yarn install, build, and test
        run: |
          yarn install --non-interactive --frozen-lockfile
          yarn build
          yarn prisma generate
          yarn test:db
          yarn test
